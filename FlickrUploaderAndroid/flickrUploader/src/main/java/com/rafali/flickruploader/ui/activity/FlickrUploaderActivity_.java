//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations 3.0.1.
//


package com.rafali.flickruploader.ui.activity;

import java.util.Collection;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.support.v4.widget.SwipeRefreshLayout;
import android.view.KeyEvent;
import android.view.View;
import android.view.ViewGroup.LayoutParams;
import android.widget.TextView;
import com.rafali.flickruploader.model.Folder;
import com.rafali.flickruploader.model.Media;
import com.rafali.flickruploader.ui.DrawerContentView;
import com.rafali.flickruploader.ui.DrawerHandleView;
import com.rafali.flickruploader.ui.widget.SlidingDrawer;
import com.rafali.flickruploader.ui.widget.StickyHeaderListView;
import com.rafali.flickruploader2.R.id;
import com.rafali.flickruploader2.R.layout;
import org.androidannotations.api.BackgroundExecutor;
import org.androidannotations.api.SdkVersionHelper;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class FlickrUploaderActivity_
    extends FlickrUploaderActivity
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    private Handler handler_ = new Handler(Looper.getMainLooper());

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(layout.flickr_uploader_activity);
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static FlickrUploaderActivity_.IntentBuilder_ intent(Context context) {
        return new FlickrUploaderActivity_.IntentBuilder_(context);
    }

    public static FlickrUploaderActivity_.IntentBuilder_ intent(android.app.Fragment fragment) {
        return new FlickrUploaderActivity_.IntentBuilder_(fragment);
    }

    public static FlickrUploaderActivity_.IntentBuilder_ intent(android.support.v4.app.Fragment supportFragment) {
        return new FlickrUploaderActivity_.IntentBuilder_(supportFragment);
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (((SdkVersionHelper.getSdkInt()< 5)&&(keyCode == KeyEvent.KEYCODE_BACK))&&(event.getRepeatCount() == 0)) {
            onBackPressed();
        }
        return super.onKeyDown(keyCode, event);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        drawerContentView = ((DrawerContentView) hasViews.findViewById(id.drawer_content));
        swipeContainer = ((SwipeRefreshLayout) hasViews.findViewById(id.swipe_container));
        message = ((TextView) hasViews.findViewById(id.message));
        drawerHandleView = ((DrawerHandleView) hasViews.findViewById(id.drawer_handle));
        listView = ((StickyHeaderListView) hasViews.findViewById(id.list_view));
        slidingDrawer = ((SlidingDrawer) hasViews.findViewById(id.slidingDrawer));
        afterViews();
    }

    @Override
    public void hideLoading() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                FlickrUploaderActivity_.super.hideLoading();
            }

        }
        );
    }

    @Override
    public void computeHeaders(final boolean clearHeaders) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                FlickrUploaderActivity_.super.computeHeaders(clearHeaders);
            }

        }
        );
    }

    @Override
    public void clearSelection() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                FlickrUploaderActivity_.super.clearSelection();
            }

        }
        );
    }

    @Override
    public void onActivityResult(final int requestCode, final int resultCode, final Intent data) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                FlickrUploaderActivity_.super.onActivityResult(requestCode, resultCode, data);
            }

        }
        );
    }

    @Override
    public void refresh() {
        handler_.postDelayed(new Runnable() {


            @Override
            public void run() {
                FlickrUploaderActivity_.super.refresh();
            }

        }
        , 100L);
    }

    @Override
    public void renderImageView(final View convertView, final boolean reset) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                FlickrUploaderActivity_.super.renderImageView(convertView, reset);
            }

        }
        );
    }

    @Override
    public void showNewSetDialog(final Folder folder) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                FlickrUploaderActivity_.super.showNewSetDialog(folder);
            }

        }
        );
    }

    @Override
    public void renderMenu() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                FlickrUploaderActivity_.super.renderMenu();
            }

        }
        );
    }

    @Override
    public void renderListView() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                FlickrUploaderActivity_.super.renderListView();
            }

        }
        );
    }

    @Override
    public void renderLoop() {
        handler_.postDelayed(new Runnable() {


            @Override
            public void run() {
                FlickrUploaderActivity_.super.renderLoop();
            }

        }
        , 1000L);
    }

    @Override
    public void confirmUpload(final Collection<Media> mediasToUpload) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                FlickrUploaderActivity_.super.confirmUpload(mediasToUpload);
            }

        }
        );
    }

    @Override
    public void showExistingSetDialog() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                FlickrUploaderActivity_.super.showExistingSetDialog();
            }

        }
        );
    }

    @Override
    public void showLoading(final String title, final String message) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                FlickrUploaderActivity_.super.showLoading(title, message);
            }

        }
        );
    }

    @Override
    public void setLoading(final int progress) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                FlickrUploaderActivity_.super.setLoading(progress);
            }

        }
        );
    }

    @Override
    public void checkPremium() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                FlickrUploaderActivity_.super.checkPremium();
            }

        }
        );
    }

    @Override
    public void handleIntent(final Intent intent) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    FlickrUploaderActivity_.super.handleIntent(intent);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @Override
    public void enqueue(final Collection<Media> images, final String photoSetTitle) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    FlickrUploaderActivity_.super.enqueue(images, photoSetTitle);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @Override
    public void load(final boolean refresh) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "load") {


            @Override
            public void execute() {
                try {
                    FlickrUploaderActivity_.super.load(refresh);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    public static class IntentBuilder_ {

        private Context context_;
        private final Intent intent_;
        private android.app.Fragment fragment_;
        private android.support.v4.app.Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            context_ = context;
            intent_ = new Intent(context, FlickrUploaderActivity_.class);
        }

        public IntentBuilder_(android.app.Fragment fragment) {
            fragment_ = fragment;
            context_ = fragment.getActivity();
            intent_ = new Intent(context_, FlickrUploaderActivity_.class);
        }

        public IntentBuilder_(android.support.v4.app.Fragment fragment) {
            fragmentSupport_ = fragment;
            context_ = fragment.getActivity();
            intent_ = new Intent(context_, FlickrUploaderActivity_.class);
        }

        public Intent get() {
            return intent_;
        }

        public FlickrUploaderActivity_.IntentBuilder_ flags(int flags) {
            intent_.setFlags(flags);
            return this;
        }

        public void start() {
            context_.startActivity(intent_);
        }

        public void startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent_, requestCode);
            } else {
                if (fragment_!= null) {
                    fragment_.startActivityForResult(intent_, requestCode);
                } else {
                    if (context_ instanceof Activity) {
                        ((Activity) context_).startActivityForResult(intent_, requestCode);
                    } else {
                        context_.startActivity(intent_);
                    }
                }
            }
        }

    }

}
